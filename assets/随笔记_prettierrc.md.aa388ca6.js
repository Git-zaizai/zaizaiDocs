import{_ as n,o as a,c as l,O as p}from"./chunks/framework.218070ce.js";const F=JSON.parse('{"title":".prettierrc 配置","description":"","frontmatter":{},"headers":[],"relativePath":"随笔记/prettierrc.md","filePath":"随笔记/prettierrc.md","lastUpdated":1743585365000}'),e={name:"随笔记/prettierrc.md"};function o(r,s,t,c,B,i){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="prettierrc-配置" tabindex="-1">.prettierrc 配置 <a class="header-anchor" href="#prettierrc-配置" aria-label="Permalink to &quot;.prettierrc 配置&quot;">​</a></h1><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 一行最多多少个字符</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">printWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 指定每个缩进级别的空格数</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">tabWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 使用制表符而不是空格缩进行</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">useTabs</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在语句末尾打印分号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">semi</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 使用单引号而不是双引号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">singleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 更改引用对象属性的时间 可选值&quot;&lt;as-needed|consistent|preserve&gt;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">quoteProps</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;as-needed&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在JSX中使用单引号而不是双引号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">jsxSingleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 多行时尽可能打印尾随逗号。（例如，单行数组永远不会出现逗号结尾。） 可选值&quot;&lt;none|es5|all&gt;&quot;，默认none</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">trailingComma</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;es5&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在对象文字中的括号之间打印空格</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">bracketSpacing</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// jsx 标签的反尖括号需要换行</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">jsxBracketSameLine</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在jsx中把&#39;&gt;&#39; 是否单独放一行</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">bracketSameLine</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在单独的箭头函数参数周围包括括号 always：(x) =&gt; x \\ avoid：x =&gt; x</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">arrowParens</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;avoid&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 这两个选项可用于格式化以给定字符偏移量（分别包括和不包括）开始和结束的代码</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">rangeStart</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">rangeEnd</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">Infinity</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 指定要使用的解析器，不需要写文件开头的 @prettier</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">requirePragma</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 不需要自动在文件开头插入 @prettier</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">insertPragma</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 使用默认的折行标准 always\\never\\preserve</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">proseWrap</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;preserve&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 指定HTML文件的全局空格敏感度 css\\strict\\ignore</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">htmlWhitespaceSensitivity</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;css&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// Vue文件脚本和样式标签缩进</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">vueIndentScriptAndStyle</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 换行符使用 lf 结尾是 可选值&quot;&lt;auto|lf|crlf|cr&gt;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">endOfLine</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;lf&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在 HTML、Vue 和 JSX 中每行强制执行单个属性。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">singleAttributePerLine</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div>`,2)]))}const A=n(e,[["render",o]]);export{F as __pageData,A as default};
