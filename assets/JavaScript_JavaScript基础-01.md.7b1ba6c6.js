import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8218e65d.js";const p="/assets/图片1.06b11e2f.png",o="/assets/图片2.a842526f.png",e="/assets/图片3.529e4e9e.png",t="/assets/图片4.b36bf7b4.png",r="/assets/图片5.c67208c2.png",c="/assets/图片6.bca21160.png",i="/assets/图片7.5d6fea89.png",B="/assets/图片8.6ed9d502.png",y="/assets/图片9.48d45304.png",d="/assets/neihe.75052bab.png",u="/assets/图片10.253d521f.png",b="/assets/图片11.9b94798d.png",F="/assets/图片12.9c8440b8.png",A="/assets/图片13.c135c926.png",h="/assets/图片14.0c81a34d.png",m="/assets/图片15.6ab5aa8c.png",C="/assets/图片16.f6e4c06c.png",g="/assets/图片17.25793351.png",v="/assets/图片18.44752a1c.png",E="/assets/图片19.658f39bd.png",f="/assets/图片20.6652ce96.png",_="/assets/图片21.d8b66aa1.png",D="/assets/图片22.521f8c7c.png",k="/assets/图片23.bb820989.png",H=JSON.parse('{"title":"JavaScript 基础-开篇","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/JavaScript基础-01.md","filePath":"JavaScript/JavaScript基础-01.md","lastUpdated":1712056060000}'),q={name:"JavaScript/JavaScript基础-01.md"},S=l('<h1 id="javascript-基础-开篇" tabindex="-1">JavaScript 基础-开篇 <a class="header-anchor" href="#javascript-基础-开篇" aria-label="Permalink to &quot;JavaScript 基础-开篇&quot;">​</a></h1><h2 id="_1-编程语言" tabindex="-1">1 - 编程语言 <a class="header-anchor" href="#_1-编程语言" aria-label="Permalink to &quot;1 - 编程语言&quot;">​</a></h2><h3 id="_1-1-编程" tabindex="-1">1.1 编程 <a class="header-anchor" href="#_1-1-编程" aria-label="Permalink to &quot;1.1 编程&quot;">​</a></h3><ul><li>编程： <ul><li>就是让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。</li></ul></li><li>计算机程序： <ul><li>就是计算机所执行的一系列的指令集合，而程序全部都是用我们所掌握的语言来编写的，所以人们要控制计算机一定要通过计算机语言向计算机发出命令。</li></ul></li></ul><h3 id="_1-2-计算机语言" tabindex="-1">1.2 计算机语言 <a class="header-anchor" href="#_1-2-计算机语言" aria-label="Permalink to &quot;1.2 计算机语言&quot;">​</a></h3><ul><li><p>计算机语言指用于人与计算机之间通讯的语言，它是人与计算机之间传递信息的媒介。</p></li><li><p>计算机语言的种类非常的多，总的来说可以分成机器语言，汇编语言和高级语言三大类。</p></li><li><p>实际上计算机最终所执行的都是 机器语言，它是由“0”和“1”组成的二进制数，二进制是计算机语言的基础。</p><p><img src="'+p+`" alt="./images"></p></li></ul><h3 id="_1-3-编程语言" tabindex="-1">1.3 编程语言 <a class="header-anchor" href="#_1-3-编程语言" aria-label="Permalink to &quot;1.3 编程语言&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">编程语言： 可以通过类似于人类语言的“语言”来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming</span></span>
<span class="line"><span style="color:#ABB2BF;">Language）。编程语言是用来控制计算机的一系列指令，它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守。如今通用的编程语言有两种形式：汇编语言和高级语言。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table><thead><tr><th>语言类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td><strong>汇编语言</strong></td><td style="text-align:center;">汇编语言和机器语言实质是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，容易识别和记忆。</td></tr><tr><td><strong>高级语言</strong></td><td style="text-align:center;">高级语言主要是相对于低级语言而言，它并不是特指某一种具体的语言，而是包括了很多编程语言，常用的有 C 语言、C++、Java、C#、Python、PHP、JavaScript、Go 语言、Objective-C、Swift 等。</td></tr></tbody></table><p><img src="`+o+`" alt="png"></p><h3 id="_1-4-翻译器" tabindex="-1">1.4 翻译器 <a class="header-anchor" href="#_1-4-翻译器" aria-label="Permalink to &quot;1.4 翻译器&quot;">​</a></h3><pre><code>	高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行，

  为此，我们需要一个翻译器。翻译器可以将我们所编写的源代码转换为机器语言，

  这也被称为二进制化。
</code></pre><p><img src="`+e+'" alt="png"></p><h3 id="_1-5-编程语言和标记语言区别" tabindex="-1">1.5 编程语言和标记语言区别 <a class="header-anchor" href="#_1-5-编程语言和标记语言区别" aria-label="Permalink to &quot;1.5 编程语言和标记语言区别&quot;">​</a></h3><table><thead><tr><th>语言</th><th>说明</th></tr></thead><tbody><tr><td>编程语言</td><td>编程语言有很强的逻辑和行为能力。在编程语言里, 你会看到很多 if else 、for 、while 等具有逻辑性和行为能力的指令，这是主动的。</td></tr><tr><td>标记语言</td><td>标记语言（html）不用于向计算机发出指令，常用于格式化和链接。标记语言的存在是用来被读取的, 他是被动的。</td></tr></tbody></table><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><ol><li>计算机可以帮助人类解决某些问题</li><li>程序员利用编程语言编写程序发出指令控制计算机来实现这些任务</li><li>编程语言有机器语言、汇编语言、高级语言</li><li>高级语言需要一个翻译器转换为计算机识别的机器语言</li><li>编程语言是主动的有很强的逻辑性</li></ol><h2 id="_2-计算机基础" tabindex="-1">2 - 计算机基础 <a class="header-anchor" href="#_2-计算机基础" aria-label="Permalink to &quot;2 - 计算机基础&quot;">​</a></h2><h3 id="_2-1-计算机组成" tabindex="-1">2.1 计算机组成 <a class="header-anchor" href="#_2-1-计算机组成" aria-label="Permalink to &quot;2.1 计算机组成&quot;">​</a></h3><p><img src="'+t+'" alt=""></p><p><img src="'+r+'" alt=""></p><h3 id="_2-2-数据存储" tabindex="-1">2.2 数据存储 <a class="header-anchor" href="#_2-2-数据存储" aria-label="Permalink to &quot;2.2 数据存储&quot;">​</a></h3><ol><li>计算机内部使用二进制 0 和 1 来表示数据。</li><li>所有数据，包括文件、图片等最终都是以二进制数据（0 和 1）的形式存放在硬盘中的。</li><li>所有程序，包括操作系统，本质都是各种数据，也以二进制数据的形式存放在硬盘中。平时我们所说的安装软件，其实就是把程序文件复制到硬盘中。</li><li>硬盘、内存都是保存的二进制数据。</li></ol><h3 id="_2-3-数据存储单位" tabindex="-1">2.3 数据存储单位 <a class="header-anchor" href="#_2-3-数据存储单位" aria-label="Permalink to &quot;2.3 数据存储单位&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">大小关系：bit &lt; byte &lt; kb &lt; GB &lt; TB&lt;.....</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>位(bit)： 1bit 可以保存一个 0 或者 1 （最小的存储单位）</li><li>字节(Byte)：1B = 8b</li><li>千字节(KB)：1KB = 1024B</li><li>兆字节(MB)：1MB = 1024KB</li><li>吉字节(GB): 1GB = 1024MB</li><li>太字节(TB): 1TB = 1024GB</li></ul><h3 id="_2-4-程序运行" tabindex="-1">2.4 程序运行 <a class="header-anchor" href="#_2-4-程序运行" aria-label="Permalink to &quot;2.4 程序运行&quot;">​</a></h3><p><img src="'+c+`" alt=""></p><pre><code>计算机运行软件的过程：
1. 打开某个程序时，先从硬盘中把程序的代码加载到内存中
2. CPU执行内存中的代码
   注意：之所以要内存的一个重要原因，是因为 cpu运行太快了，如果只从硬盘中读数据，会浪费cpu性能，
 所以，才使用存取速度更快的内存来保存运行时的数据。（内存是电，硬盘是机械）
</code></pre><h2 id="_3-初始-javascript" tabindex="-1">3 - 初始 JavaScript <a class="header-anchor" href="#_3-初始-javascript" aria-label="Permalink to &quot;3 - 初始 JavaScript&quot;">​</a></h2><h3 id="_3-1-javascript-是什么" tabindex="-1">3.1 JavaScript 是什么 <a class="header-anchor" href="#_3-1-javascript-是什么" aria-label="Permalink to &quot;3.1 JavaScript 是什么&quot;">​</a></h3><p><img src="`+i+'" alt=""></p><ul><li><p>JavaScript 是世界上最流行的语言之一，是一种运行在客户端的脚本语言 （Script 是脚本的意思）</p></li><li><p>脚本语言：不需要编译，运行过程中由 js 解释器( js 引擎）逐行来进行解释并执行</p></li><li><p>现在也可以基于 Node.js 技术进行服务器端编程</p><p><img src="'+B+'" alt=""></p></li></ul><h3 id="_3-2-javascript-的作用" tabindex="-1">3.2 JavaScript 的作用 <a class="header-anchor" href="#_3-2-javascript-的作用" aria-label="Permalink to &quot;3.2 JavaScript 的作用&quot;">​</a></h3><ul><li>表单动态校验（密码强度检测） （ JS 产生最初的目的 ）</li><li>网页特效</li><li>服务端开发(Node.js)</li><li>桌面程序(Electron)</li><li>App(Cordova)</li><li>控制硬件-物联网(Ruff)</li><li>游戏开发(cocos2d-js)</li></ul><h3 id="_3-3-html-css-js-的关系" tabindex="-1">3.3 HTML/CSS/JS 的关系 <a class="header-anchor" href="#_3-3-html-css-js-的关系" aria-label="Permalink to &quot;3.3 HTML/CSS/JS 的关系&quot;">​</a></h3><p><img src="'+y+'" alt=""></p><h3 id="_3-4-浏览器执行-js-简介" tabindex="-1">3.4 浏览器执行 JS 简介 <a class="header-anchor" href="#_3-4-浏览器执行-js-简介" aria-label="Permalink to &quot;3.4 浏览器执行 JS 简介&quot;">​</a></h3><p><strong>浏览器分成两部分：渲染引擎和 JS 引擎</strong></p><p><img src="'+d+`" alt=""></p><pre><code>	浏览器本身并不会执行JS代码，而是通过内置 JavaScript 引擎(解释器) 来执行 JS 代码 。
JS 引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，
所以 JavaScript 语言归为脚本语言，会逐行解释执行。
</code></pre><p><img src="`+u+'" alt=""></p><h3 id="_3-5-js-的组成" tabindex="-1">3.5 JS 的组成 <a class="header-anchor" href="#_3-5-js-的组成" aria-label="Permalink to &quot;3.5 JS 的组成&quot;">​</a></h3><p><img src="'+b+'" alt=""></p><ol><li><h4 id="ecmascript" tabindex="-1"><strong>ECMAScript</strong> <a class="header-anchor" href="#ecmascript" aria-label="Permalink to &quot;**ECMAScript**&quot;">​</a></h4> ECMAScript 是由 ECMA 国际（ 原欧洲计算机制造商协会）进行标准化的一门编程语言， 这种语言在万维网上应用广泛，它往往被称为 JavaScript 或 JScript， 但实际上后两者是 ECMAScript 语言的实现和扩展。 <img src="'+F+`" alt=""></li></ol><p>ECMAScript：规定了 JS 的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套 JS 语法工业标准。 更多参看 MDN: <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview" target="_blank" rel="noreferrer">MDN 手册</a></p><ol><li><h4 id="dom——文档对象模型" tabindex="-1"><strong>DOM——文档对象模型</strong> <a class="header-anchor" href="#dom——文档对象模型" aria-label="Permalink to &quot;**DOM——文档对象模型**&quot;">​</a></h4><p>​ <strong>文档对象模型</strong>（DocumentObject Model，简称 DOM），是 W3C 组织推荐的处理可扩展标记语言的标准编程接口。 通过 DOM 提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）</p></li><li><h4 id="bom——浏览器对象模型" tabindex="-1"><strong>BOM——浏览器对象模型</strong> <a class="header-anchor" href="#bom——浏览器对象模型" aria-label="Permalink to &quot;**BOM——浏览器对象模型**&quot;">​</a></h4><p>​ <strong>浏览器对象模型</strong>(Browser Object Model，简称 BOM) 是指浏览器对象模型，它提供了独立于内容的、可 以与浏览器窗口进行互动的对象结构。通过 BOM 可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。</p></li></ol><h3 id="_3-6-js-初体验" tabindex="-1">3.6 JS 初体验 <a class="header-anchor" href="#_3-6-js-初体验" aria-label="Permalink to &quot;3.6 JS 初体验&quot;">​</a></h3><pre><code>JS 有3种书写位置，分别为行内、内嵌和外部。
</code></pre><ol><li>行内式</li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">input</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;button&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;点我试试&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">onclick</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;</span><span style="color:#61AFEF;">alert</span><span style="color:#98C379;">(&#39;Hello World&#39;)&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>可以将单行或少量 JS 代码写在 HTML 标签的事件属性中（以 on 开头的属性），如：onclick</li><li>注意单双引号的使用：在 HTML 中我们推荐使用双引号, JS 中我们推荐使用单引号</li><li>可读性差， 在 html 中编写 JS 大量代码时，不方便阅读；</li><li>引号易错，引号多层嵌套匹配时，非常容易弄混；</li><li>特殊情况下使用</li></ul><ol start="2"><li><p>内嵌式</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Hello  World~!&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>可以将多行 JS 代码写到 script 标签中</li><li>内嵌 JS 是学习时常用的方式</li></ul></li><li><p>外部 JS 文件</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;my.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>利于 HTML 页面代码结构化，把大段 JS 代码独立到 HTML 页面之外，既美观，也方便文件级别的复用</li><li>引用外部 JS 文件的 script 标签中间不可以写代码</li><li>适合于 JS 代码量比较大的情况</li></ul></li></ol><h2 id="_4-javascript-注释" tabindex="-1">4 - JavaScript 注释 <a class="header-anchor" href="#_4-javascript-注释" aria-label="Permalink to &quot;4 - JavaScript 注释&quot;">​</a></h2><ul><li>flex 子项目占的份数</li><li>align-self 控制子项自己在侧轴的排列方式</li><li>order 属性定义子项的排列顺序（前后顺序）</li></ul><h3 id="_4-1-单行注释" tabindex="-1">4.1 单行注释 <a class="header-anchor" href="#_4-1-单行注释" aria-label="Permalink to &quot;4.1 单行注释&quot;">​</a></h3><pre><code>为了提高代码的可读性，JS与CSS一样，也提供了注释功能。
JS中的注释主要有两种，分别是 单行注释 和 多行注释。
</code></pre><p>单行注释的注释方式如下：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">// 我是一行文字，不想被 JS引擎 执行，所以 注释起来</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><pre><code>// 用来注释单行文字（  快捷键   ctrl  +  /   ）
</code></pre><h3 id="_4-2-多行注释" tabindex="-1">4.2 多行注释 <a class="header-anchor" href="#_4-2-多行注释" aria-label="Permalink to &quot;4.2 多行注释&quot;">​</a></h3><p>多行注释的注释方式如下：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">/* 获取用户年龄和姓名 并通过提示框显示出来 */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">/* */  用来注释多行文字（ 默认快捷键  alt +  shift  + a ）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>快捷键修改为： ctrl + shift + /</p><p>vscode → 首选项按钮 → 键盘快捷方式 → 查找 原来的快捷键 → 修改为新的快捷键 → 回车确认</p><h2 id="_5-javascript-输入输出语句" tabindex="-1">5 - JavaScript 输入输出语句 <a class="header-anchor" href="#_5-javascript-输入输出语句" aria-label="Permalink to &quot;5 - JavaScript 输入输出语句&quot;">​</a></h2><p>为了方便信息的输入输出，JS 中提供了一些输入输出语句，其常用的语句如下：</p><table><thead><tr><th>方法</th><th>说明</th><th>归属</th></tr></thead><tbody><tr><td>alert(msg)</td><td>浏览器弹出警示框</td><td>浏览器</td></tr><tr><td>console.log(msg)</td><td>浏览器控制台打印输出信息</td><td>浏览器</td></tr><tr><td>prompt(info)</td><td>浏览器弹出输入框，用户可以输入</td><td>浏览器</td></tr></tbody></table><ul><li>注意：alert() 主要用来显示消息给用户，console.log() 用来给程序员自己看运行时的消息。</li></ul><h2 id="_6-变量的概念" tabindex="-1">6 - 变量的概念 <a class="header-anchor" href="#_6-变量的概念" aria-label="Permalink to &quot;6 - 变量的概念&quot;">​</a></h2><h3 id="_6-1-什么是变量" tabindex="-1">6.1 什么是变量 <a class="header-anchor" href="#_6-1-什么是变量" aria-label="Permalink to &quot;6.1 什么是变量&quot;">​</a></h3><p>白话：变量就是一个装东西的盒子。</p><p>通俗：变量是用于存放数据的容器。 我们通过 变量名 获取数据，甚至数据可以修改。 <img src="`+A+`" alt=""></p><h3 id="_6-2-变量在内存中的存储" tabindex="-1">6.2 变量在内存中的存储 <a class="header-anchor" href="#_6-2-变量在内存中的存储" aria-label="Permalink to &quot;6.2 变量在内存中的存储&quot;">​</a></h3><pre><code>	本质：变量是程序在内存中申请的一块用来存放数据的空间。
类似我们酒店的房间，一个房间就可以看做是一个变量。
</code></pre><p><img src="`+h+`" alt=""></p><h2 id="_7-变量的使用" tabindex="-1">7 - 变量的使用 <a class="header-anchor" href="#_7-变量的使用" aria-label="Permalink to &quot;7 - 变量的使用&quot;">​</a></h2><ul><li>变量的声明</li><li>变量的赋值</li></ul><h3 id="_7-1-声明变量" tabindex="-1">7.1 声明变量 <a class="header-anchor" href="#_7-1-声明变量" aria-label="Permalink to &quot;7.1 声明变量&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//  声明变量</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//  声明一个 名称为age 的变量</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>var 是一个 JS 关键字，用来声明变量( variable 变量的意思 )。 使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管</p></li><li><p>age 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间</p></li></ul><h3 id="_7-2-赋值" tabindex="-1">7.2 赋值 <a class="header-anchor" href="#_7-2-赋值" aria-label="Permalink to &quot;7.2 赋值&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 给 age  这个变量赋值为 10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>= 用来把右边的值赋给左边的变量空间中 此处代表赋值的意思</li><li>变量值是程序员保存到变量空间里的值</li></ul><h3 id="_7-3-变量的初始化" tabindex="-1">7.3 变量的初始化 <a class="header-anchor" href="#_7-3-变量的初始化" aria-label="Permalink to &quot;7.3 变量的初始化&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 声明变量同时赋值为 18</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 声明一个变量并赋值， 我们称之为变量的初始化。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_7-4-变量语法扩展" tabindex="-1">7.4 变量语法扩展 <a class="header-anchor" href="#_7-4-变量语法扩展" aria-label="Permalink to &quot;7.4 变量语法扩展&quot;">​</a></h3><ul><li><p>更新变量</p><p>​ 一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">81</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 最后的结果就是81因为18 被覆盖掉了</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>同时声明多个变量</p><p>​ 同时声明多个变量时，只需要写一个 var， 多个变量名之间使用英文逗号隔开。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;zs&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">sex</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>声明变量特殊情况</p><table><thead><tr><th>情况</th><th>说明</th><th>结果</th></tr></thead><tbody><tr><td>var age ; console.log (age);</td><td>只声明 不赋值</td><td>undefined</td></tr><tr><td>console.log(age)</td><td>不声明 不赋值 直接使用</td><td>报错</td></tr><tr><td>age = 10; console.log (age);</td><td>不声明 只赋值</td><td>10</td></tr></tbody></table></li></ul><h3 id="_7-5-变量命名规范" tabindex="-1">7.5 变量命名规范 <a class="header-anchor" href="#_7-5-变量命名规范" aria-label="Permalink to &quot;7.5 变量命名规范&quot;">​</a></h3><p>规则：</p><ul><li>由字母(A-Za-z)、数字(0-9)、下划线(_)、美元符号( $ )组成，如：usrAge, num01, _name</li><li>严格区分大小写。var app; 和 var App; 是两个变量</li><li>不能 以数字开头。 18age 是错误的</li><li>不能 是关键字、保留字。例如：var、for、while</li><li>变量名必须有意义。 MMD BBD nl → age</li><li>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。myFirstName<img src="`+m+`" alt=""></li></ul><p>推荐翻译网站： 有道 爱词霸</p><h2 id="_8-数据类型" tabindex="-1">8 - 数据类型 <a class="header-anchor" href="#_8-数据类型" aria-label="Permalink to &quot;8 - 数据类型&quot;">​</a></h2><h3 id="_8-1-数据类型简介" tabindex="-1">8.1 数据类型简介 <a class="header-anchor" href="#_8-1-数据类型简介" aria-label="Permalink to &quot;8.1 数据类型简介&quot;">​</a></h3><ul><li><p>为什么需要数据类型</p><pre><code>​在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不同的数据，充分利用存储空间，
</code></pre><p>于是定义了不同的数据类型。 简单来说，数据类型就是数据的类别型号。比如姓名“张三”，年龄 18，这些数据的类型是不一样的。</p></li><li><p>变量的数据类型</p><pre><code>​		变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。JavaScript 是一种弱类型或者说动态语言。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定：
</code></pre><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 这是一个数字型</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">areYouOk</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;是的&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 这是一个字符串</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>​ 在代码运行时，变量的数据类型是由 JS 引擎 根据 = 右边变量值的数据类型来判断 的，运行完毕之后， 变量就确定了数据类型。JavaScript 拥有动态类型，同时也意味着相同的变量可用作不同的类型：</p></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">6</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// x 为数字</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;Bill&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// x 为字符串</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>数据类型的分类</p><pre><code>JS 把数据类型分为两类：
</code></pre><ul><li><p>简单数据类型 （Number,String,Boolean,Undefined,Null）</p></li><li><p>复杂数据类型 （object)</p></li></ul></li></ul><h3 id="_8-2-简单数据类型" tabindex="-1">8.2 简单数据类型 <a class="header-anchor" href="#_8-2-简单数据类型" aria-label="Permalink to &quot;8.2 简单数据类型&quot;">​</a></h3><p>简单数据类型（基本数据类型）</p><p>JavaScript 中的简单数据类型及其说明如下：</p><p><img src="`+C+`" alt=""></p><ul><li><p>数字型 Number</p><p>​ JavaScript 数字类型既可以保存整数，也可以保存小数(浮点数）。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">21</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 整数</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">21.3747</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 小数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol><li><p>数字型进制</p><p>最常见的进制有二进制、八进制、十进制、十六进制。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 1.八进制数字序列范围：0~7</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">07</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 对应十进制的7</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">019</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 对应十进制的19</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num3</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 对应十进制的8</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2.十六进制数字序列范围：0~9以及A~F</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0xa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>现阶段我们只需要记住，在 JS 中八进制前面加 0，十六进制前面加 0x</p></li><li><p>数字型范围</p><p>JavaScript 中数值的最大和最小值</p><ul><li><p>最大值：Number.MAX_VALUE，这个值为： 1.7976931348623157e+308</p></li><li><p>最小值：Number.MIN_VALUE，这个值为：5e-32</p></li></ul></li></ol></li></ul><ol start="3"><li><p>数字型三个特殊值</p><ul><li>Infinity ，代表无穷大，大于任何数值</li><li>-Infinity ，代表无穷小，小于任何数值</li><li>NaN ，Not a number，代表一个非数值</li></ul></li><li><p>isNaN</p><p>用来判断一个变量是否为非数字的类型，返回 true 或者 false</p></li></ol><p><img src="`+g+`" alt=""></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">usrAge</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">21</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">isOk</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">isNaN</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">userAge</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">isNum</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// false ，21 不是一个非数字</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">usrName</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;andy&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">isNaN</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">userName</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// true ，&quot;andy&quot;是一个非数字</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p>字符串型 String</p><p>​ 字符串型可以是引号中的任意文本，其语法为 双引号 &quot;&quot; 和 单引号&#39;&#39;</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strMsg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;我爱北京天安门~&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 使用双引号表示字符串</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strMsg2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;我爱吃猪蹄~&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 使用单引号表示字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 常见错误</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strMsg3</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">我爱大肘子</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 报错，没使用引号，会被认为是js代码，但js没有这些语法</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>​ 因为 HTML 标签里面的属性使用的是双引号，JS 这里我们更推荐使用单引号。</p><ol><li><p>字符串引号嵌套</p><p>​ JS 可以用单引号嵌套双引号 ，或者用双引号嵌套单引号 (外双内单，外单内双)</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strMsg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;我是&quot;高帅富&quot;程序猿&#39;</span><span style="color:#ABB2BF;">;   </span><span style="color:#7F848E;font-style:italic;">// 可以用&#39;&#39;包含&quot;&quot;</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strMsg2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;我是&#39;高帅富&#39;程序猿&quot;</span><span style="color:#ABB2BF;">;  </span><span style="color:#7F848E;font-style:italic;">// 也可以用&quot;&quot; 包含&#39;&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  常见错误</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">badQuotes</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;What on earth?&quot;; // 报错，不能 单双引号搭</span><span style="color:#FFFFFF;">配</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>字符串转义符</p><p>​ 类似 HTML 里面的特殊字符，字符串中也有特殊字符，我们称之为转义符。</p><p>​ 转义符都是 \\ 开头的，常用的转义符及其说明如下：</p><table><thead><tr><th>转义符</th><th>解释说明</th></tr></thead><tbody><tr><td>\\n</td><td>换行符，n 是 newline 的意思</td></tr><tr><td>\\ \\</td><td>斜杠 \\</td></tr><tr><td>&#39;</td><td>&#39; 单引号</td></tr><tr><td>&quot;</td><td>”双引号</td></tr><tr><td>\\t</td><td>tab 缩进</td></tr><tr><td>\\b</td><td>空格 ，b 是 blank 的意思</td></tr></tbody></table></li><li><p>字符串长度</p></li></ol></li></ul><p>字符串是由若干字符组成的，这些字符的数量就是字符串的长度。 通过字符串的 length 属性可以获取整个字符串的长度。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">strMsg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;我是帅气多金的程序猿！&#39;</span></span>
<span class="line"><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">strMsg</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 显示 11</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol><li><p>字符串拼接</p><ul><li><p>多个字符串之间可以使用 + 进行拼接，其拼接方式为 字符串 + 任何类型 = 拼接之后的新字符串</p></li><li><p>拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//1.1 字符串 &quot;相加&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39; &#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;world&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// hello world</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//1.2 数值字符串 &quot;相加&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;100&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;100&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 100100</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//1.3 数值字符串 + 数值</span></span>
<span class="line"><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;11&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1112</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><strong><em>+ 号总结口诀：数值相加 ，字符相连</em></strong></li></ul></li></ul></li><li><p>字符串拼接加强</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;pink老师&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 只要有字符就会相连</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">18</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;pink老师age岁啦&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 这样不行哦</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;pink老师&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// pink老师18</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;pink老师&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;岁啦&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// pink老师18岁啦</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>经常会将字符串和变量来拼接，变量可以很方便地修改里面的值</li><li>变量是不能添加引号的，因为加引号的变量会变成字符串</li><li>如果变量两侧都有字符串拼接，口诀“引引加加 ”，删掉数字，变量写加中间</li></ul></li></ol><ul><li><p>布尔型 Boolean</p><p>​ 布尔类型有两个值：true 和 false ，其中 true 表示真（对），而 false 表示假（错）。</p><p>​ 布尔型和数字型相加的时候， true 的值为 1 ，false 的值为 0。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Undefined 和 Null</p><p>​ 一个声明后没有被赋值的变量会有一个默认值 undefined ( 如果进行相连或者相加时，注意结果）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">variable</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">variable</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// undefined</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;你好&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">variable</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 你好undefined</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">variable</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">variable</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//  NaN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>​ 一个声明变量给 null 值，里面存的值为空（学习对象时，我们继续研究 null)</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">vari</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;你好&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">vari</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 你好null</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">vari</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 11</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">vari</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//  1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h3 id="_8-3-获取变量数据类型" tabindex="-1">8.3 获取变量数据类型 <a class="header-anchor" href="#_8-3-获取变量数据类型" aria-label="Permalink to &quot;8.3 获取变量数据类型&quot;">​</a></h3><ul><li><p>获取检测变量的数据类型</p><p>​ typeof 可用来获取检测变量的数据类型</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">18</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">num</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 结果 number</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>​ 不同类型的返回值</p><p><img src="`+v+`" alt=""></p></li><li><p>字面量</p><p>​ 字面量是在源代码中一个固定值的表示法，通俗来说，就是字面量表示如何表达这个值。</p><ul><li>数字字面量：8, 9, 10</li><li>字符串字面量：&#39;黑马程序员&#39;, &quot;大前端&quot;</li><li>布尔字面量：true，false</li></ul></li></ul><h3 id="_8-4-数据类型转换" tabindex="-1">8.4 数据类型转换 <a class="header-anchor" href="#_8-4-数据类型转换" aria-label="Permalink to &quot;8.4 数据类型转换&quot;">​</a></h3><p>​ 什么是数据类型转换？</p><p>​ 使用表单、prompt 获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算， 而需要转换变量的数据类型。通俗来说，就是把一种数据类型的变量转换成另一种数据类型，通常会实现 3 种方式的转换：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">转换为字符串类型</span></span>
<span class="line"><span style="color:#abb2bf;">转换为数字型</span></span>
<span class="line"><span style="color:#abb2bf;">转换为布尔型</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><p>转换为字符串</p><p><img src="`+E+'" alt=""></p><ul><li>toString() 和 String() 使用方式不一样。</li><li>三种转换方式，更多第三种加号拼接字符串转换方式， 这一种方式也称之为隐式转换。</li></ul></li><li><p>转换为数字型（重点）</p><p><img src="'+f+'" alt=""></p><ul><li>注意 parseInt 和 parseFloat 单词的大小写，这 2 个是重点</li><li>隐式转换是我们在进行算数运算的时候，JS 自动转换了数据类型</li></ul></li><li><p>转换为布尔型</p><p><img src="'+_+`" alt=""></p><ul><li><p>代表空、否定的值会被转换为 false ，如 &#39;&#39;、0、NaN、null、undefined</p></li><li><p>其余值都会被转换为 true</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">NaN</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;小白&#39;</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">)) </span><span style="color:#7F848E;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul></li></ul><h2 id="_9-解释型语言和编译型语言" tabindex="-1">9 - 解释型语言和编译型语言 <a class="header-anchor" href="#_9-解释型语言和编译型语言" aria-label="Permalink to &quot;9 - 解释型语言和编译型语言&quot;">​</a></h2><h3 id="_9-1-概述" tabindex="-1">9.1 概述 <a class="header-anchor" href="#_9-1-概述" aria-label="Permalink to &quot;9.1 概述&quot;">​</a></h3><pre><code>计算机不能直接理解任何除机器语言以外的语言，
</code></pre><p>所以必须要把程序员所写的程序语言翻译成机器语言才能执行程序。 程序语言翻译成机器语言的工具，被称为翻译器。</p><p><img src="`+D+'" alt=""></p><ul><li>翻译器翻译的方式有两种：一个是编译，另外一个是解释。两种方式之间的区别在于翻译的时间点不同</li><li>编译器是在代码执行之前进行编译，生成中间代码文件</li><li>解释器是在运行时进行及时解释，并立即执行(当编译器以解释方式运行的时候，也称之为解释器)</li></ul><h3 id="_9-2-执行过程" tabindex="-1">9.2 执行过程 <a class="header-anchor" href="#_9-2-执行过程" aria-label="Permalink to &quot;9.2 执行过程&quot;">​</a></h3><p><img src="'+k+`" alt=""></p><pre><code>类似于请客吃饭：

	编译语言：首先把所有菜做好，才能上桌吃饭

	解释语言：好比吃火锅，边吃边涮，同时进行
</code></pre><h2 id="_10-关键字和保留字" tabindex="-1">10 - 关键字和保留字 <a class="header-anchor" href="#_10-关键字和保留字" aria-label="Permalink to &quot;10 - 关键字和保留字&quot;">​</a></h2><h3 id="_10-1-标识符" tabindex="-1">10.1 标识符 <a class="header-anchor" href="#_10-1-标识符" aria-label="Permalink to &quot;10.1 标识符&quot;">​</a></h3><pre><code>标识(zhi)符：就是指开发人员为变量、属性、函数、参数取的名字。

标识符不能是关键字或保留字。
</code></pre><h3 id="_10-2-关键字" tabindex="-1">10.2 关键字 <a class="header-anchor" href="#_10-2-关键字" aria-label="Permalink to &quot;10.2 关键字&quot;">​</a></h3><pre><code>关键字：是指 JS本身已经使用了的字，不能再用它们充当变量名、方法名。

包括：以下等。
</code></pre><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">break</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">case</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">continue</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">delete</span><span style="color:#ABB2BF;">、</span></span>
<span class="line"><span style="color:#C678DD;">do</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">finally</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">for</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">if</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">in</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">instanceof</span><span style="color:#ABB2BF;">、</span></span>
<span class="line"><span style="color:#61AFEF;">new</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">return</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">switch</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">this</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">throw</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">try</span><span style="color:#ABB2BF;">、</span><span style="color:#61AFEF;">typeof</span><span style="color:#ABB2BF;">、</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">void</span><span style="color:#ABB2BF;">、while、with</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_10-3-保留字" tabindex="-1">10.3 保留字 <a class="header-anchor" href="#_10-3-保留字" aria-label="Permalink to &quot;10.3 保留字&quot;">​</a></h3><pre><code>保留字：实际上就是预留的“关键字”，意思是现在虽然还不是关键字，
</code></pre><p>但是未来可能会成为关键字，同样不能使用它们当变量名或方法名。 包括：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">boolean</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">byte</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">char</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">class</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">、</span><span style="color:#E5C07B;">debugger</span><span style="color:#ABB2BF;">、double、</span></span>
<span class="line"><span style="color:#E06C75;">enum</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">fimal</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">float</span><span style="color:#ABB2BF;">、</span><span style="color:#C678DD;">goto</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">implements</span><span style="color:#ABB2BF;">、</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">int</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">interface</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">long</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">mative</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">package</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">private</span><span style="color:#ABB2BF;">、</span></span>
<span class="line"><span style="color:#E06C75;">protected</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">public</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">short</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">static</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">super</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">synchronized</span><span style="color:#ABB2BF;">、</span></span>
<span class="line"><span style="color:#E06C75;">throws</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">transient</span><span style="color:#ABB2BF;">、</span><span style="color:#E06C75;">volatile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><pre><code>注意：如果将保留字用作变量名或函数名，那么除非将来的浏览器实现了该保留字，
</code></pre><p>否则很可能收不到任何错误消息。当浏览器将其实现后，该单词将被看做关键字， 如此将出现关键字错误。</p>`,139),j=[S];function J(x,P,w,M,N,T){return a(),n("div",null,j)}const L=s(q,[["render",J]]);export{H as __pageData,L as default};
