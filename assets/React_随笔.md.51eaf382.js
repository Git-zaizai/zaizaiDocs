import{_ as n,o as a,c as e,O as l}from"./chunks/framework.218070ce.js";const u=JSON.parse('{"title":"useEffect 与 useLayoutEffect 的区别点","description":"","frontmatter":{},"headers":[],"relativePath":"React/随笔.md","filePath":"React/随笔.md","lastUpdated":1743585365000}'),o={name:"React/随笔.md"};function p(t,s,c,r,B,y){return a(),e("div",null,s[0]||(s[0]=[l(`<h1 id="useeffect-与-uselayouteffect-的区别点" tabindex="-1"><code>useEffect</code> 与 <code>useLayoutEffect</code> 的区别点 <a class="header-anchor" href="#useeffect-与-uselayouteffect-的区别点" aria-label="Permalink to &quot;\`useEffect\` 与 \`useLayoutEffect\` 的区别点&quot;">​</a></h1><p>首先看一段代码：</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">viewRef</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">useRef</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#61AFEF;">useEffect</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">viewRef</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">current</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;touchstart&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">start</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">passive</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;viewRef.current&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">viewRef</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;viewRef.current&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">viewRef</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 这里会打印出 unll</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">viewRef</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">current</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;touchstart&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">start</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}, [])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>log <code>viewRef.current === null</code>，会是这样的结果，当你想要在组件卸载时操作 <code>dom元素</code>，会访问不到 <code>dom元素</code>，因为 <code>useEffect</code> 是会在 <code>dom更新后执行的</code>，</p>`,4)]))}const F=n(o,[["render",p]]);export{u as __pageData,F as default};
