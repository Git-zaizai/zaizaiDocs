import{_ as a,o as l,c as p,k as s,a as e,t as o,Q as r}from"./chunks/framework.4d982d65.js";const t="/zaizaiDocs/assets/vite打包优化实战-2023-02-25-21-12-49.d89f552c.png",c="/zaizaiDocs/assets/vite打包优化实战-2023-02-25-21-59-48.454e2ef2.png",i="/zaizaiDocs/assets/vite打包优化实战-2023-02-25-22-11-28.bc35acb9.png",B="/zaizaiDocs/assets/vite打包优化实战-2023-02-25-22-12-11.df897cb5.png",y="/zaizaiDocs/assets/vite打包优化实战-2023-02-25-22-15-17.7de6cf1b.png",f=JSON.parse('{"title":"vite打包优化实战","description":"","frontmatter":{"title":"vite打包优化实战"},"headers":[],"relativePath":"Buildtools/vite打包优化实战.md","filePath":"Buildtools/vite打包优化实战.md","lastUpdated":1724517484000}'),b={name:"Buildtools/vite打包优化实战.md"},u={id:"frontmatter-title",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{$frontmatter.title}}"'},"​",-1),m=r('<h2 id="为什么要进行打包优化" tabindex="-1">为什么要进行打包优化 <a class="header-anchor" href="#为什么要进行打包优化" aria-label="Permalink to &quot;为什么要进行打包优化&quot;">​</a></h2><h2 id="有哪些优化点" tabindex="-1">有哪些优化点 <a class="header-anchor" href="#有哪些优化点" aria-label="Permalink to &quot;有哪些优化点&quot;">​</a></h2><ul><li>css 打包优化</li><li>图片资源压缩</li><li>第三方组件引入优化(按需引入以及 CDN 引入)</li><li>打包后的 js/css 结果压缩优化</li><li>自动删除 console.log</li><li>自己编写的模块进行拆包/合包/按需引入</li></ul><h2 id="vite-默认有哪些优化" tabindex="-1">vite 默认有哪些优化 <a class="header-anchor" href="#vite-默认有哪些优化" aria-label="Permalink to &quot;vite 默认有哪些优化&quot;">​</a></h2><p><a href="https://cn.vitejs.dev/guide/features.html#build-optimizations" target="_blank" rel="noreferrer">vite 官网：构建优化</a></p><h3 id="css-代码分割" tabindex="-1">CSS 代码分割 <a class="header-anchor" href="#css-代码分割" aria-label="Permalink to &quot;CSS 代码分割&quot;">​</a></h3><p>Vite 会自动地将一个异步 chunk 模块中使用到的 CSS 代码抽取出来并为其生成一个单独的文件。这个 CSS 文件将在该异步 chunk 加载完成时自动通过一个 <code>&lt;link&gt;</code> 标签载入，该异步 <code>chunk</code> 会保证只在 <code>CSS</code> 加载完毕后再执行，避免发生 FOUC 。</p><p>如果你更倾向于将所有的 CSS 抽取到一个文件中，你可以通过设置 build.cssCodeSplit 为 false 来禁用 CSS 代码分割。</p><h3 id="异步-chunk-加载优化" tabindex="-1">异步 Chunk 加载优化 <a class="header-anchor" href="#异步-chunk-加载优化" aria-label="Permalink to &quot;异步 Chunk 加载优化&quot;">​</a></h3><p>在实际项目中，Rollup 通常会生成 “共用” chunk —— 被两个或以上的其他 chunk 共享的 chunk。与动态导入相结合，会很容易出现下面这种场景：</p><p><img src="'+t+`" alt=""></p><p>在无优化的情境下，当异步 chunk A 被导入时，浏览器将必须请求和解析 A，然后它才能弄清楚它也需要共用 chunk C。这会导致额外的网络往返：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">Entry ---&gt; A ---&gt; C</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Vite 将使用一个预加载步骤自动重写代码，来分割动态导入调用，以实现当 A 被请求时，C 也将 同时 被请求：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">Entry ---&gt; (A + C)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>C 也可能有更深的导入，在未优化的场景中，这会导致更多的网络往返。Vite 的优化会跟踪所有的直接导入，无论导入的深度如何，都能够完全消除不必要的往返。</p><h2 id="css-打包优化" tabindex="-1">css 打包优化 <a class="header-anchor" href="#css-打包优化" aria-label="Permalink to &quot;css 打包优化&quot;">​</a></h2><ol><li><p>使用 <a href="https://preset-env.cssdb.org/" target="_blank" rel="noreferrer">postcss-preset-env</a> 将一些现代的 CSS 特性，转成大多数浏览器认识的 CSS，并且会根据目标浏览器或运行时环境添加所需的 polyfill</p></li><li><p>使用 <a href="https://www.cssnano.cn/" target="_blank" rel="noreferrer">cssnano</a> 压缩 css</p></li></ol><p><strong>现代的 CSS 特性是指什么？</strong></p><p>我们使用的十六进制颜色码是 6 位的（# 后面跟 6 位十六进制数，如 #123456），第 1、2 位代表 r（red），第 3、4 位代表 g（green），第 5、6 位代表 b（blue）。但事实上还有一种写法，即使用 8 位的十六进制颜色码（如 #12345678），最后两位代表 a（alpha 透明度），这样来写后，最后的两位会生效吗？答案是有些浏览器会生效，有些则不会，这与浏览器能否正常解析 8 位的十六进制颜色码有关。</p><p><strong><code>会根据目标浏览器或运行时环境添加所需的 polyfill</code> 这句话什么意思？</strong></p><p>以通过 css 禁止用户选择为例，通常我们会这么写</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  user-select: </span><span style="color:#D19A66;">none</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>将<code>browserslist</code>设置为<code>defaults</code>, 经过<code>postcss-preset-env</code>处理后会变成这样</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">-webkit-user-select</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">none</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">-moz-user-select</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">none</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  user-select: </span><span style="color:#D19A66;">none</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="配置方式" tabindex="-1">配置方式 <a class="header-anchor" href="#配置方式" aria-label="Permalink to &quot;配置方式&quot;">​</a></h3><h4 id="依赖安装与配置" tabindex="-1">依赖安装与配置 <a class="header-anchor" href="#依赖安装与配置" aria-label="Permalink to &quot;依赖安装与配置&quot;">​</a></h4><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">pnpm add postcss-preset-env cssnano -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>项目根目录创建<code>postcss.config.cjs</code>文件</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">plugins</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&#39;postcss-preset-env&#39;</span><span style="color:#ABB2BF;">: {},</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      cssnano作用:将css进行打包优化，能够减小打包后的css体积</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      (如何看是否有效: 去掉这个配置，打包一次截图css的体积，加上这个配置再打包一次，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        对比两次打包后css的体积变化，会发现加了这个配置体积会小一点). </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        官网: https://www.cssnano.cn/docs/what-are-optimisations/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">       */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">cssnano</span><span style="color:#ABB2BF;">: {},</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>package.json</code>添加<code>browserslist</code>配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;project-template&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;private&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.0.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;browserslist&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;defaults&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Android &gt;= 4.4&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;iOS &gt;= 12.0&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;ie &gt;= 11&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;Firefox &gt; 69&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;chrome &gt;= 69&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="关于-browserslist" tabindex="-1">关于 browserslist <a class="header-anchor" href="#关于-browserslist" aria-label="Permalink to &quot;关于 browserslist&quot;">​</a></h4><p><strong>browserslist 本身的作用?</strong></p><p>browserslist 是一个用特定语句查询浏览器列表的工具</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查询 Chrome 最后的两个版本</span></span>
<span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">browserslist</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;last 2 Chrome versions&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">chrome</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">96</span></span>
<span class="line"><span style="color:#61AFEF;">chrome</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">95</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查询全球市场占有率大于 10% 的浏览器</span></span>
<span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">browserslist</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;&gt; 10%&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">and_chr</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">96</span></span>
<span class="line"><span style="color:#61AFEF;">chrome</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">95</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>在项目中的作用?</strong></p><p>市面上有很多浏览器，每种浏览器又有不同的版本，所支持的环境各不相同，为了抹平它们之间的差异，于是出现了 Pollyfill 解决方案，Pollyfill 的作用是通过降级处理，让新的语法能够运行在其不被支持的浏览器环境中，常见的 Pollyfill 有 Babel、Autoprefixer 等。</p><p>以 Babel 为例，它是怎么判断项目是否需要做降级处理的呢，答案就是通过 browserslist 查询出需要支持的浏览器列表，然后根据这个列表来做判断。</p><h4 id="查看当前配置的-browserslist-值覆盖的浏览器和浏览器市场份额" tabindex="-1">查看当前配置的 browserslist 值覆盖的浏览器和浏览器市场份额 <a class="header-anchor" href="#查看当前配置的-browserslist-值覆盖的浏览器和浏览器市场份额" aria-label="Permalink to &quot;查看当前配置的 browserslist 值覆盖的浏览器和浏览器市场份额&quot;">​</a></h4><p><a href="https://browsersl.ist/" target="_blank" rel="noreferrer">browserslist 官网</a></p><p><img src="`+c+'" alt=""></p><p>以<code>chrome &gt;= 105</code>配置为例</p><p><img src="'+i+'" alt=""></p><p><img src="'+B+'" alt=""></p><p><img src="'+y+`" alt=""></p><h2 id="图片资源压缩" tabindex="-1">图片资源压缩 <a class="header-anchor" href="#图片资源压缩" aria-label="Permalink to &quot;图片资源压缩&quot;">​</a></h2><p>通过<a href="https://github.com/vbenjs/vite-plugin-imagemin/blob/main/README.zh_CN.md" target="_blank" rel="noreferrer">vite-plugin-imagemin</a>对图片资源进行压缩</p><p>众所周知的网络环境问题，导致插件不可用</p><h2 id="第三方组件引入优化" tabindex="-1">第三方组件引入优化 <a class="header-anchor" href="#第三方组件引入优化" aria-label="Permalink to &quot;第三方组件引入优化&quot;">​</a></h2><h3 id="import-函数对-js-模块进行异步引入" tabindex="-1">import()函数对 js 模块进行异步引入 <a class="header-anchor" href="#import-函数对-js-模块进行异步引入" aria-label="Permalink to &quot;import()函数对 js 模块进行异步引入&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">button</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./dialogBox.js&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">dialogBox</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">dialogBox</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    .</span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">/* Error handling */</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="将很少变动的第三方依赖单独打入一个包" tabindex="-1">将很少变动的第三方依赖单独打入一个包 <a class="header-anchor" href="#将很少变动的第三方依赖单独打入一个包" aria-label="Permalink to &quot;将很少变动的第三方依赖单独打入一个包&quot;">​</a></h3><p><strong>作用：</strong> 提供缓存的命中率</p><p>如: <code>vue</code>,<code>router</code>,<code>pinia</code>基本不会变，那么将这 3 个依赖单独打入一个包</p><h3 id="使用-cdn" tabindex="-1">使用 cdn <a class="header-anchor" href="#使用-cdn" aria-label="Permalink to &quot;使用 cdn&quot;">​</a></h3><p><strong>一般公司的管理系统好像用不上，通常没有额外的 CDN 费用预算。</strong></p><p>正式项目不要尝试免费的 CDN，免费的代价是很高的。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>使用 cdn 引入的依赖不能再使用按需引入，必须全量引入</li><li>第三方依赖的依赖项也必须使用 cdn 引入，且本地也必须<code>pnpm add</code>这个依赖项（即使该依赖项并未直接使用）【这点可以不强制这么做，但为了明确版本信息最好这么做】，且引入顺序也分先后。如: pinia, 如果不使用 cdn 方式，那那只要直接引入 pinia 即可，使用了 cdn 方式，还必须引入 vue-demi，且 vue-demi 必须再 pinia 之前引入</li><li>当某个第三方依赖是通过 cdn 引入，那这个第三方依赖的依赖，也必须通过 cdn 方式引入。如：element-plus 是通过 cdn 引入，同时 element-plus 依赖 vue，那么 vue 也必须通过 cdn 方式引入</li></ol></div><p><a href="https://github.com/MMF-FE/vite-plugin-cdn-import/blob/master/README.zh-CN.md" target="_blank" rel="noreferrer">vite-plugin-cdn-import</a>: 从 CDN 加载 modules 的 vite 插件</p><p>允许指定 modules 在生产环境中使用 CDN 引入。</p><p>可以减少构建时间,并且提高生产环境中页面加载速度。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">pnpm add vite-plugin-cdn-import -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">importToCDN</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vite-plugin-cdn-import&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 打包时采用\`cdn\`模式，仅限外网使用（默认不采用，如果需要采用cdn模式，请在 .env.production 文件，将 VITE_CDN 设置成true）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 平台采用国内cdn：https://www.bootcdn.cn，当然你也可以选择 https://unpkg.com 或者 https://www.jsdelivr.com</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 提醒：mockjs不能用cdn模式引入，会报错。正确的方式是，生产环境删除mockjs，使用真实的后端请求</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 注意：上面提到的仅限外网使用也不是完全肯定的，如果你们公司内网部署的有相关js、css文件，也可以将下面配置对应改一下，整一套内网版cdn</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">importCDN</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">importToCDN</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//（prodUrl解释： name: 对应下面modules的name，version: 自动读取本地package.json中dependencies依赖中对应包的版本号，path: 对应下面modules的path，当然也可写完整路径，会替换prodUrl）</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">prodUrl</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;https://cdn.bootcdn.net/ajax/libs/{name}/{version}/{path}&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Vue&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue.global.prod.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue-router&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;VueRouter&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue-router.global.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue-i18n&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;VueI18n&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue-i18n.runtime.global.prod.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 项目中没有直接安装vue-demi，但是pinia用到了，所以需要在引入pinia前引入vue-demi（https://github.com/vuejs/pinia/blob/v2/packages/pinia/package.json#L77）</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;vue-demi&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;VueDemi&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;index.iife.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;pinia&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Pinia&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;pinia.iife.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;element-plus&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;ElementPlus&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;index.full.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">css</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;index.min.css&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;axios&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;axios&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;axios.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;dayjs&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">var</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;dayjs&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;dayjs.min.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//   name: &#39;echarts&#39;,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//   var: &#39;echarts&#39;,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">//   path: &#39;echarts.min.js&#39;,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// },</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h2 id="自己编写的模块进行拆包-合包-按需引入" tabindex="-1">自己编写的模块进行拆包/合包/按需引入 <a class="header-anchor" href="#自己编写的模块进行拆包-合包-按需引入" aria-label="Permalink to &quot;自己编写的模块进行拆包/合包/按需引入&quot;">​</a></h2><h3 id="路由相关" tabindex="-1">路由相关 <a class="header-anchor" href="#路由相关" aria-label="Permalink to &quot;路由相关&quot;">​</a></h3><h4 id="路由懒加载" tabindex="-1">路由懒加载 <a class="header-anchor" href="#路由懒加载" aria-label="Permalink to &quot;路由懒加载&quot;">​</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 将</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// import UserDetails from &#39;./views/UserDetails.vue&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 替换成</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">UserDetails</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./views/UserDetails.vue&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/users/:id&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">UserDetails</span><span style="color:#ABB2BF;"> }],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://blog.csdn.net/wu_xianqiang/article/details/124676971" target="_blank" rel="noreferrer">不要在路由中</a>使用异步组件。异步组件仍然可以在路由组件中使用，但路由组件本身就是动态导入的。</p></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 错误示范</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">UserDetails</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineAsyncComponent</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./views/UserDetails.vue&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">router</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createRouter</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">routes</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/users/:id&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">UserDetails</span><span style="color:#ABB2BF;"> }],</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="把组件按组分块" tabindex="-1">把组件按组分块 <a class="header-anchor" href="#把组件按组分块" aria-label="Permalink to &quot;把组件按组分块&quot;">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// vite.config.js</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">build</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">rollupOptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// https://rollupjs.org/guide/en/#outputmanualchunks</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">output</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">manualChunks</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#98C379;">&#39;group-user&#39;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#98C379;">&#39;./src/UserDetails&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#98C379;">&#39;./src/UserDashboard&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#98C379;">&#39;./src/UserProfileEdit&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">          ],</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><p><a href="https://juejin.cn/post/7000141573480513550" target="_blank" rel="noreferrer">深入 Webpack5 等构建工具系列二(10) - postcss-preset-env 和配置抽取</a></p><p><a href="https://juejin.cn/post/7054114633312894983" target="_blank" rel="noreferrer">browserslist 是什么？看这篇就够了</a></p><p><a href="https://blog.csdn.net/qq_43806604/article/details/124732352" target="_blank" rel="noreferrer">Vite 图片压缩(vite-plugin-imagemin) imagemin error: XXXX 解决办法</a></p><p><a href="https://juejin.cn/post/7173430592715882526" target="_blank" rel="noreferrer">手把手教你开发一个快速、高性能、高质量压缩图片的 Vite 插件</a></p><p><a href="http://yiming_chang.gitee.io/pure-admin-doc/pages/buildgood/" target="_blank" rel="noreferrer">Pure Admin: 打包优化</a></p><p><a href="https://juejin.cn/post/7115215444671201310" target="_blank" rel="noreferrer">vite cdn 加载 vue ——vite 插件</a></p>`,79);function F(n,A,h,C,g,v){return l(),p("div",null,[s("h1",u,[e(o(n.$frontmatter.title)+" ",1),d]),m])}const k=a(b,[["render",F]]);export{f as __pageData,k as default};
